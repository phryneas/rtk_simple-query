import React from 'react';
import clsx from 'clsx';
import Layout from '@theme/Layout';
import Link from '@docusaurus/Link';
import useDocusaurusContext from '@docusaurus/useDocusaurusContext';
import useBaseUrl from '@docusaurus/useBaseUrl';
import styles from './styles.module.css';

const features = [
  {
    title: 'Simple and Effective',
    image: (
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 909.83 1100">
        <g fill="currentColor">
          <path d="M886.9 557.45a78.28 78.28 0 00-63.4-22.52 80.17 80.17 0 00-88-97.47 82.63 82.63 0 001.84-17.46 82 82 0 00-73.86-81.55l139-139A81.94 81.94 0 10686.63 83.5L412.05 358.08c-18.64 18.64-41.11 31.55-65 37.35-17.91 4.35-36 4.4-50.55.28-14.38-22.37-27.88-40.68-30.8-44.6-29.61-40.41-56.89-81.54-88.7-130.88-32.71-50.66-74.06-72.44-113.46-59.73C53 163.89 43 170.07 32.92 179.38 15.06 195.91-1.28 214.46.08 238.15c1 18.15 11.48 34.43 27.29 59.07 9 13.95 20.09 31.32 31.94 53 7.11 13.05 12.46 26.58 18.13 40.91 2.24 5.68 4.57 11.55 7 17.43 7.36 17.61 16.71 40.94 23.81 65.21 11.72 40 5.36 78.49-1.36 119.2-4.85 29.33-9.86 59.66-8 91.42 2.37 40.18 13.66 80.92 33.55 121.08 18.75 37.87 44.15 73 75.49 104.3 57.84 57.84 129 95.64 200.5 106.42a269.83 269.83 0 0040.28 3.1 225.74 225.74 0 0059.29-7.66c32.34-8.77 60.2-24.68 82.8-47.28L820.22 735l66.67-66.67a78.5 78.5 0 00.01-110.88zm-106.08-75.92a50.32 50.32 0 010 71.1l-4.79 4.8-66.67 66.67-4.81 4.81a50.28 50.28 0 11-71.11-71.1l38.16-38.16 38.15-38.15a50.33 50.33 0 0171.07.03zM655.39 368a51.94 51.94 0 0136.73 88.67l-41.77 41.77-38.15 38.18-3.6 3.61a51.94 51.94 0 01-73.46-73.46l35.35-35.36 48.18-48.18A51.61 51.61 0 01655.39 368zm-85.76 575.19c-37.56 37.55-93.2 53-156.68 43.39-65.17-9.84-130.43-44.63-183.77-98q-8-8-15.37-16.27a170.76 170.76 0 0046.47 6.6 151.64 151.64 0 0025.42-2.11c38.61-6.55 69.21-28.22 88.49-62.66A12.48 12.48 0 10352.4 802c-15.68 28-39.53 44.92-70.88 50.24-36.89 6.26-75.64-5.26-99.85-21.42a350.45 350.45 0 01-22.31-38.59c-18.09-36.54-28.35-73.4-30.49-109.54-1.68-28.41 2.85-55.78 7.63-84.76 7-42.24 14.2-85.91.57-132.51-7.52-25.69-17.27-50-24.93-68.36-2.34-5.6-4.61-11.34-6.8-16.89-5.75-14.54-11.7-29.57-19.69-44.24-12.36-22.66-23.82-40.53-33-54.89-12.77-19.91-22-34.3-22.59-44.58-.36-6.35 2.12-15.47 23.26-35 6.79-6.29 13.15-10.33 19.43-12.35 36.16-11.67 67.32 29.3 79 47.45 32.15 49.81 59.73 91.39 89.81 132.41l.07.09c15.41 20.7 56.86 80.6 63.42 108.77a15 15 0 1029.22-6.8c-2.78-11.94-9.63-26.93-18-42.24a144.06 144.06 0 0037.87-4.15c29.22-7.09 56.58-22.75 79.12-45.29l274.58-274.63a51.94 51.94 0 0173.46 73.46L597.45 362l-83.54 83.53a81.91 81.91 0 0075.44 138 80.23 80.23 0 0097.47 88.1A78.28 78.28 0 00709.34 735a78 78 0 0046.11 22.36zm296.06-296.06l-31.32 31.31L799 713.81a48.47 48.47 0 01-68.46 0 48.47 48.47 0 010-68.46l66.71-66.71a48.42 48.42 0 0168.44 68.5z"></path>
          <path d="M273 168.1a15 15 0 1021.27-21.1l-75-75.78a15 15 0 00-21.32 21.11zM330.86 122.33A15 15 0 00345.48 134a15.31 15.31 0 003.33-.37 15 15 0 0011.31-17.95l-23.58-104a15 15 0 10-29.25 6.63zM413.46 133.22a15 15 0 0019.09-9.22l35-100.73a15 15 0 00-28.34-9.86l-35 100.73a15 15 0 009.25 19.08zM468.54 167.07a15 15 0 0021.09 2.26l83-66.94A15 15 0 10553.82 79l-83.02 67a15 15 0 00-2.26 21.07z"></path>
        </g>
      </svg>
    ),
    description: (
      <>
        RTK Query is a <b>simple to use data fetching and caching library</b> that solves the majority of use cases,
        with advanced configuration options to fit your needs
      </>
    ),
  },
  {
    title: 'Built on Redux',
    image: (
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">
        <g fill="#764ABC">
          <path d="M65.6 65.4c2.9-.3 5.1-2.8 5-5.8-.1-3-2.6-5.4-5.6-5.4h-.2c-3.1.1-5.5 2.7-5.4 5.8.1 1.5.7 2.8 1.6 3.7-3.4 6.7-8.6 11.6-16.4 15.7-5.3 2.8-10.8 3.8-16.3 3.1-4.5-.6-8-2.6-10.2-5.9-3.2-4.9-3.5-10.2-.8-15.5 1.9-3.8 4.9-6.6 6.8-8-.4-1.3-1-3.5-1.3-5.1-14.5 10.5-13 24.7-8.6 31.4 3.3 5 10 8.1 17.4 8.1 2 0 4-.2 6-.7 12.8-2.5 22.5-10.1 28-21.4z" />
          <path d="M83.2 53c-7.6-8.9-18.8-13.8-31.6-13.8H50c-.9-1.8-2.8-3-4.9-3h-.2c-3.1.1-5.5 2.7-5.4 5.8.1 3 2.6 5.4 5.6 5.4h.2c2.2-.1 4.1-1.5 4.9-3.4H52c7.6 0 14.8 2.2 21.3 6.5 5 3.3 8.6 7.6 10.6 12.8 1.7 4.2 1.6 8.3-.2 11.8-2.8 5.3-7.5 8.2-13.7 8.2-4 0-7.8-1.2-9.8-2.1-1.1 1-3.1 2.6-4.5 3.6 4.3 2 8.7 3.1 12.9 3.1 9.6 0 16.7-5.3 19.4-10.6 2.9-5.8 2.7-15.8-4.8-24.3z" />
          <path d="M32.4 67.1c.1 3 2.6 5.4 5.6 5.4h.2c3.1-.1 5.5-2.7 5.4-5.8-.1-3-2.6-5.4-5.6-5.4h-.2c-.2 0-.5 0-.7.1-4.1-6.8-5.8-14.2-5.2-22.2.4-6 2.4-11.2 5.9-15.5 2.9-3.7 8.5-5.5 12.3-5.6 10.6-.2 15.1 13 15.4 18.3 1.3.3 3.5 1 5 1.5-1.2-16.2-11.2-24.6-20.8-24.6-9 0-17.3 6.5-20.6 16.1-4.6 12.8-1.6 25.1 4 34.8-.5.7-.8 1.8-.7 2.9z" />
        </g>
      </svg>
    ),
    description: (
      <>
        RTK Query is <b>built on top of Redux Toolkit</b>, so it integrates with the Redux ecosystem and DevTools
      </>
    ),
  },
  {
    title: 'Framework Agnostic',
    image: (
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">
        <path
          fill="currentColor"
          d="M37.434 25.406H92.54A2.464 2.464 0 0095 22.947a2.463 2.463 0 00-2.46-2.46H37.434a2.463 2.463 0 00-2.459 2.46 2.462 2.462 0 002.459 2.459zM11.18 28.335c.748 1.036 1.853 1.631 3.031 1.631l.127-.002c1.226-.044 2.331-.719 3.03-1.853l10.027-16.233a2.465 2.465 0 00-2.093-3.752c-.86 0-1.644.437-2.094 1.168L14.12 24.003l-4.666-6.46c-.764-1.059-2.369-1.323-3.433-.555a2.444 2.444 0 00-.989 1.602 2.44 2.44 0 00.434 1.832l5.714 7.913zM92.54 51.441H37.434a2.462 2.462 0 00-2.459 2.459 2.463 2.463 0 002.459 2.461H92.54A2.465 2.465 0 0095 53.9a2.463 2.463 0 00-2.46-2.459zM26.593 39.449a2.458 2.458 0 00-3.385.8L14.12 54.957l-4.666-6.46c-.764-1.06-2.369-1.323-3.433-.555a2.444 2.444 0 00-.989 1.602 2.44 2.44 0 00.434 1.832l5.715 7.913c.748 1.036 1.852 1.631 3.03 1.631l.126-.002c1.228-.044 2.332-.719 3.032-1.854l10.026-16.231a2.463 2.463 0 00-.802-3.384zM92.54 82.396H37.434a2.462 2.462 0 00-2.459 2.459 2.463 2.463 0 002.459 2.461H92.54A2.465 2.465 0 0095 84.855a2.463 2.463 0 00-2.46-2.459zM26.593 70.402a2.466 2.466 0 00-1.291-.367c-.86 0-1.644.438-2.094 1.168L14.12 85.911l-4.666-6.46c-.765-1.061-2.371-1.321-3.433-.555a2.442 2.442 0 00-.989 1.604 2.438 2.438 0 00.434 1.83l5.715 7.913c.748 1.036 1.852 1.631 3.03 1.631l.127-.002c1.226-.044 2.331-.72 3.03-1.851l10.027-16.234a2.464 2.464 0 00-.802-3.385z"
        ></path>
      </svg>
    ),
    description: (
      <>
        RTK Query <b>runs anywhere Redux runs</b> and isn't limited to React. RTK Query <b>provides React Hooks</b> for
        convenience, and it's a breeze to <b>integrate with Svelte, Vue, or any other framework of your choice</b>.
      </>
    ),
  },
  {
    title: 'Developer Experience',
    image: (
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 91 91">
        <g fill="currentColor">
          <path d="M69.203 90.954c1.16 0 2.104-.943 2.104-2.105V66.335c5.709-6.025 8.842-13.879 8.842-22.215 0-2.088-.211-4.174-.604-6.207l-.004-.014c-.01-.061-.014-.123-.025-.182a2.06 2.06 0 00-.221-.594c-.002-.004-.002-.01-.002-.012-1.111-2.002-2.689-3.166-2.865-3.293a2.1 2.1 0 00-2.922.475c-.68.938-.473 2.25.459 2.938.006.004.387.309.824.797-2.381 2.465-9.92 8.479-26.879 8.479-15.66 0-24.072-6.082-26.939-8.662.342-.32.676-.57.844-.68a2.105 2.105 0 00-2.275-3.541c-.219.143-2.182 1.443-3.215 3.404l-.012.02-.004.008c-.006.01-.004.02-.008.029a2.095 2.095 0 00-.188.52 32.727 32.727 0 00-.656 6.516c0 .281.006.561.014.834l-9.473 16.41c-.375.652-.375 1.455 0 2.105s1.072 1.051 1.822 1.051h4.916v9.836c0 5.658 4.602 10.262 10.262 10.262h10.799v4.23a2.106 2.106 0 004.209 0v-4.23h5.137a2.105 2.105 0 000-4.209H22.998a6.061 6.061 0 01-6.055-6.053v-11.94a2.103 2.103 0 00-2.104-2.104h-3.373l7.949-13.771a2.09 2.09 0 00.279-1.104s-.01-2.525.027-3.125c4.336 3.369 13.301 8.402 28.188 8.402 15.385 0 23.857-4.617 27.994-7.988.025.463.035.928.035 1.393 0 7.451-2.885 14.457-8.117 19.752l-4.777 3.215a2.1 2.1 0 00-.572 2.918 2.1 2.1 0 002.92.575l1.707-1.148V88.85a2.104 2.104 0 002.104 2.104z"></path>
          <path d="M21.506 28.792c0 4.555 3.375 8.344 8.006 9.293 1.773 3.059 5.15 4.988 8.939 4.988 4.018 0 7.406-2.156 9.459-5.012 2.051 2.855 5.441 5.012 9.455 5.012 3.791 0 7.168-1.93 8.939-4.988 4.633-.947 8.008-4.738 8.01-9.293 0-4.66-3.588-8.545-8.314-9.381-.957-4.342-5.072-7.619-9.992-7.619-3.301 0-6.232 1.482-8.098 3.768-1.867-2.285-4.799-3.768-8.1-3.768-4.92.006-9.035 3.279-9.994 7.619-4.722.838-8.31 4.721-8.31 9.381zm34.502-12.791c3.305 0 5.996 2.398 5.996 5.344 0 1.525-.74 2.982-2.029 4.002a2.104 2.104 0 002.603 3.303c1.654-1.303 2.803-3.039 3.32-4.957 2.438.682 4.207 2.709 4.207 5.1-.002 2.752-2.314 5.037-5.381 5.318a8.98 8.98 0 01-.617.027 2.102 2.102 0 00-2.104 2.104c0 .195.025.387.076.568-1.119 1.268-2.854 2.055-4.715 2.055-3.004 0-5.568-2.045-6.711-4.363.705-.496 1.518-1.109 2.195-1.719.943.055 1.592.244 2.404.904a2.097 2.097 0 002.959-.306 2.101 2.101 0 00-.305-2.959 8.077 8.077 0 00-2.404-1.375 48.546 48.546 0 001.434-2.967 2.104 2.104 0 10-3.857-1.682c-.615 1.414-1.881 3.986-2.656 4.883a5.531 5.531 0 01-.41.398v-8.334c.001-2.946 2.688-5.344 5.995-5.344zm-26.09 7.691c.518 1.92 1.668 3.658 3.324 4.959a2.1 2.1 0 002.953-.354 2.1 2.1 0 00-.354-2.953c-1.287-1.016-2.027-2.475-2.027-4 0-2.943 2.691-5.342 5.998-5.344 3.305 0 5.992 2.398 5.992 5.344v8.336a5.277 5.277 0 01-.408-.398c-.773-.895-2.043-3.471-2.66-4.885a2.106 2.106 0 00-3.859 1.685c.107.244.693 1.559 1.438 2.961a8.023 8.023 0 00-2.404 1.379 2.104 2.104 0 102.658 3.261c.807-.658 1.455-.848 2.402-.902a23.035 23.035 0 002.193 1.719c-1.143 2.32-3.707 4.363-6.713 4.363-1.859 0-3.592-.785-4.713-2.055a2.105 2.105 0 00-2.027-2.672c-.209 0-.414-.014-.617-.027-3.066-.281-5.379-2.566-5.379-5.318 0-2.39 1.769-4.417 4.203-5.099zM49.449 6.368v-4.02a2.103 2.103 0 10-4.209.001v4.02a2.106 2.106 0 004.209-.001zM61.707 11.397c.805 0 1.574-.465 1.924-1.25l1.633-3.672a2.104 2.104 0 10-3.845-1.709l-1.631 3.67a2.103 2.103 0 001.919 2.961zM75.059 19.366l2.984-2.697a2.102 2.102 0 00.152-2.971 2.108 2.108 0 00-2.973-.152l-2.984 2.697a2.106 2.106 0 001.411 3.666 2.1 2.1 0 001.41-.543zM81.756 32.429l3.822-1.25a2.105 2.105 0 001.348-2.652 2.109 2.109 0 00-2.656-1.348l-3.822 1.246a2.104 2.104 0 00.654 4.105c.216 0 .437-.031.654-.101zM14.514 29.294l-3.834-1.207a2.105 2.105 0 10-1.266 4.014l3.832 1.209a2.103 2.103 0 002.641-1.377 2.106 2.106 0 00-1.373-2.639zM19.385 14.249c-.873-.77-2.203-.686-2.973.184s-.688 2.197.184 2.969l3.012 2.664c.4.354.896.527 1.395.527a2.1 2.1 0 001.576-.709 2.108 2.108 0 00-.182-2.973l-3.012-2.662zM32.717 11.776a2.102 2.102 0 001.912-2.98L32.957 5.14a2.105 2.105 0 00-3.828 1.75l1.674 3.658a2.1 2.1 0 001.914 1.228z"></path>
        </g>
      </svg>
    ),
    description: (
      <>
        RTK Query is <b>built entirely with TypeScript</b>, giving TS and JS users a first-class experience out of the
        box, and comes with opinionated defaults for common patterns.
      </>
    ),
  },
];

function Feature({ image, title, description }) {
  return (
    <div className={clsx('col col--3 text--center', styles.feature)}>
      {image && <div className={styles.featureImage}>{image}</div>}
      <h2>{title}</h2>
      <p>{description}</p>
    </div>
  );
}

const featuresToPaths = {
  'Supports any protocol': null,
  'Declarative API definitions': '/api/createApi#createapi',
  Caching: '/concepts/queries#avoiding-unnecessary-requests',
  'Automatic re-fetching': '/concepts/mutations#advanced-mutations-with-revalidation',
  Polling: '/concepts/polling',
  'Parallel queries': '',
  'Dependent queries': '/concepts/conditional-fetching',
  'Paginated queries': '/concepts/pagination',
  'Skip queries': '/concepts/conditional-fetching',
  'Lagged queries': '/concepts/conditional-fetching',
  'Automatic garbage collection': '/api/createApi#keepunuseddatafor',
  Prefetching: '/concepts/prefetching',
  'Optimistic Updates': '/concepts/optimistic-updates',
  'Auto-generated React Hooks': '/api/created-api/overview#react-hooks',
  'Runs on every framework': null,
  'Built with TypeScript': null,
};

const Checkmark = () => {
  return (
    <svg className={styles.checkmark} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52">
      <circle className={styles.checkmark__circle} cx="26" cy="26" r="25" fill="none" />
      <path className={styles.checkmark__check} fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8" />
    </svg>
  );
};

function LibFeature({ title, link }) {
  return (
    <div className={clsx('col col--3 text--left', styles.feature)}>
      <p>
        <Checkmark /> {link ? <Link to={link}>{title}</Link> : title}
      </p>
    </div>
  );
}

function Home() {
  const context = useDocusaurusContext();
  const { siteConfig = {} } = context;
  return (
    <Layout
      title={`${siteConfig.title} - ${siteConfig.tagline}`}
      description="RTK Query is an advanced data fetching and caching tool, designed to simplify common cases for loading data in a web application."
    >
      <header className={clsx('hero hero--primary', styles.heroBanner)}>
        <div className="container">
          <h1 className="hero__title">{siteConfig.title}</h1>
          <h2 className="hero__subtitle">{siteConfig.tagline}</h2>
          <p className="hero__subtitle">
            Caching and network request management can be hard. RTK Query simplifies data fetching so you can focus on
            building your product.
          </p>
          <div className={styles.buttons}>
            <Link
              className={clsx('button button--secondary button--lg', styles.getStarted)}
              to={useBaseUrl('introduction/getting-started')}
            >
              Get Started
            </Link>
          </div>
        </div>
      </header>
      <main>
        {features && features.length > 0 && (
          <section className={styles.features}>
            <div className="container">
              <div className="row">
                {features.map((props, idx) => (
                  <Feature key={idx} {...props} />
                ))}
              </div>
            </div>
          </section>
        )}
        <section className={`${styles.features} ${styles.grayBg}`}>
          <div className="container">
            <div>
              <h2 className="text--center">Features</h2>
            </div>
            <div className={`row text--center`}>
              {Object.entries(featuresToPaths).map(([title, link], idx) => (
                <LibFeature key={idx} title={title} link={link} />
              ))}
            </div>
          </div>
        </section>
      </main>
    </Layout>
  );
}

export default Home;
